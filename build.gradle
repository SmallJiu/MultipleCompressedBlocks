buildscript {
    repositories {
        jcenter()
//        maven { url = "http://lss233.littleservice.cn/repositories/minecraft" }
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "1.12.2-3.0.0-20220322000126"
group = "cat.jiu.mcs" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MultipleCompressedStuffs"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    
	mappings = "snapshot_20171003"
    
	// makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

def commonManifest = {
    attributes('FMLAT': 'mcs_at.cfg')
}

jar {
	manifest commonManifest
}

task deobfJar(type: Jar) {
    manifest commonManifest
}

artifacts {
    deobfJar
}

repositories {
    mavenLocal()
    maven {
        name 'CurseMaven'
        url 'https://www.cursemaven.com/'
    }
    maven {
        name 'DVS1 Repo'
        url 'https://dvs1.progwml6.com/files/maven/'
    }
    maven {
        name "OpenComputers"
        url "https://maven.cil.li"
    }
    maven {
        name "CoFH Maven"
        url "https://maven.covers1624.net"
    }
    maven {
        name "Thiakil Maven"
        url "https://maven.thiakil.com/"
    }
    maven {
        name "BlameJared Maven"
        url "https://maven.blamejared.com/"
    }
    maven {
        name "Bluexin Maven"
        url "https://maven.bluexin.be/repository/snapshots/"
    }
    maven {
        name "tterrag Maven"
        url "https://maven.tterrag.com/"
    }
    maven {
        name "sfPlayer1 Maven"
        url "https://maven.ic2.player.to/"
    }
    maven {
        name "Darkhax Maven"
        url "https://maven.mcmoddev.com"
    }
	maven {
        name "Modmaven"
        url "https://modmaven.dev/"
    }
}

dependencies {
//	compile 'jiu:jiucore:1.12.2-1.0.0'
	deobfCompile 'curse.maven:industrialcraft-242638:2746892'
	deobfCompile 'cofh:ThermalFoundation:1.12.2-2.6.3.27:universal'
	deobfCompile "curse.maven:projecte-226410:2702991" //1.4.1
	deobfCompile "vazkii.botania:Botania:r1.10-363.148"
	deobfCompile("morph.avaritia:Avaritia:1.12.2-3.3.0.33:universal") { exclude group: "codechicken" }
    deobfCompile "slimeknights:TConstruct:1.12.2-2.13.0.184"
    deobfCompile "curse.maven:draconic-evolution-223565:3051542" // 2.3.27.353
	deobfCompile "curse.maven:environmental-tech-245453:2691536" // 2.0.20.1
//	compileOnly "appeng:appliedenergistics2:6.0.0-stable.7:api"
	
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
